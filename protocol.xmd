--04.11.2022--
neuer zufallgenerator für erzeugung der Akteur.

this.addObject( new Fish, Greenfoot.getRandomNumber(this.getWidth()),Greenfoot.getRandomNumber(this.getHeight()));

this - ist ein zeichen für *dieses ein Class* in diesen fall ist das das World (die Welt).
Fish - ist unser Akteur Class (es kann in jedes anderes gewechselt werden)
die methode addObject funktioniert NUR in der World class. Es würde uns hiermit helfen, das die bosse bzw. die Fische in zufallinger stelle erzeugt werden.

als nächstes hätte ich die Methode isTouching.
wenn ich die methode isTouching aufrufe mit Subnautic.Class könnte man removeTouching(Subnautic.class) ausführen und man würde dann verlieren, weil der Akteur gegessen wurde,
um das spiel nach dem es ausgeführt wird zu stoppen (man kann ja weiter nicht spielen), könnte man die methode Greenfoot.stop(); benutzen.
Dazu noch könnte man die methode Greenfoot.playSound("name des sounds") ausführen um das Sound beim fressen aus zu spielen
also heißt es;

if ( isTouching(Subnautic.class) )
{
  removeTouching(Subnautic.class);                //-- Hier Entfernt die methode das Jenige class welches es berührt hat
  Greenfoot.playSound("au.wav");                  //-- Hier wird das sound bei der methode touching (fressen) gespielt
  Greenfoot.stop();                               //-- Stoppt das spiel nach dem der Akteur gefressen wurde
}

Das code nutzt man bei dem Enemy, welches den Akteur (Spielbarer Charackter) töten bzw. auffressen soll.
___________________________________________________________________________________________________________________________________________________________

--11.11.2022--
neues xmd datei mit dem commando switchImage() und counter()

Ich habe als neues und sehr wichtiges das Commando von dem szenario crab04 die switchImages und counter rausgefunden und füge es rein, da es uns höchstwahrscheinlich helfen kann, beim animieren der bewegung mit PNG (falls ihr kein gif wollt).

Hallo zusammen, hier wird unser Animation in format PNG erklärt.
Wir können das Objekt animieren indem man paar bilder in das Commando "switchImage" einführt.
Als beispiel habe ich Crab04 szenario genommen und füge dies hier ein, damit sie es alle versteht.
Für die animation brauchen wir auch ein timer, ein counter, welches die animation verlangsamt. Sonst wird es sehr schnelle bullshit welches ganze zeit sich drehen wird.
Code;


    private int speed = [Zahl]
    private GreenfootImage stand; [Steh bild]
    private GreenfootImage move; [Gehendes bild]
    private int counter = 0;
    
    
public void act() [Act methode heißt das es sich beim interaction sich die unten stehenden commanden ausführen soll]
    {
        checkKeypress();
        lookForWorm();
    
    }
    
                                                   // Dies ist eine normalle checkKeypress commande (heißt das es guckt, ob einer der taste gedrückt ist). Wir fügen unsere weitere commande rein um eine Animation und bewegung zu führen.
    
public void checkKeypress()
    {
        if (Greenfoot.isKeyDown("left")) 
        {
            moveLeft();      [Commando aus jeder void Move, welches zeigt wohin er während des drückens der taste hingeht]
            walk();          [Commando aus Walk, setzt den timer und wechselt die images nach dem man die taste drückt]
        }
        if (Greenfoot.isKeyDown("right")) 
        {
            moveRight();
            walk();
        }
        if (Greenfoot.isKeyDown("up"))
        {
            moveUp();
            walk();
        }
        if (Greenfoot.isKeyDown("down"))
        {
            moveDown();
            walk();
        }
    }
    
                                            // Dies ist die Move commande, nur in detailiesierter way. Halt keine zahlen mehr sondern einfach int speed
    
    }
    public void moveRight()
    {
         setLocation(getX()+speed, getY());
    }
    public void moveLeft()
    {
        setLocation(getX()-speed, getY());
    }
    public void moveUp()
    {
        setLocation(getX(), getY()-speed);
    }
    public void moveDown()
    {
        setLocation(getX(), getY()+speed);
    }

                                          // Hier wird das alles spannend, denn hier fängt es an die bilder zu wechseln!

public void switchImage()
    {
        if (getImage() == stand)
        {
            setImage(move);
        } else {
            setImage(stand);
        }
    }
    
                                          // Das ist die commande um unsere png dateien zu bennen, quasi "stand" ist das bild wo die crabbe steht und "move" wo die krabbe ihr füße einzieht. Sodurch wird es animiert!
                                        
   
       public Crab()
    {
        stand = new GreenfootImage("crab.png"); [Steht | Standart]
        move = new GreenfootImage("crab2.png"); [Bewegt | Move]
        setImage(stand);
    }
    
                                          // Hier ist die commande welche in isKeyDown vorkommt und diese ist das Counter zwischen switchen der images.
    
    
    public void walk()
    {
        if (counter == 5) counter = 0;
        if (counter == 0) setImage(stand);
        if (counter == 2) setImage(move);
        
        counter++;
    }
______________________________________________________________________________________________________________________________________________________
